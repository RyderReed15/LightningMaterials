package mymod.items;

import java.util.List;

import cpw.mods.fml.relauncher.Side;
import cpw.mods.fml.relauncher.SideOnly;
import mymod.LightningMaterials;
import mymod.projectile.GrenadeEntity;
import net.minecraft.client.renderer.texture.IIconRegister;
import net.minecraft.creativetab.CreativeTabs;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.entity.projectile.EntityArrow;
import net.minecraft.entity.projectile.EntitySnowball;
import net.minecraft.init.Items;
import net.minecraft.item.EnumAction;
import net.minecraft.item.Item;
import net.minecraft.item.ItemStack;
import net.minecraft.potion.Potion;
import net.minecraft.world.World;


public class Gun extends Item {
    
    private String texturePath = "mymod:";
    private boolean gunfired;
    public Gun(int ItemID, String textureName)
    {
        super();
        this.setMaxStackSize(1);
        this.setUnlocalizedName(textureName);
        this.setCreativeTab(CreativeTabs.tabMaterials);
        this.setMaxDamage(1000);
        texturePath += textureName;
    
		// TODO Auto-generated constructor stub
	}
    public EnumAction getItemUseAction(ItemStack p_77661_1_)
    {
        return EnumAction.bow;
    }
    
    
    @SideOnly(Side.CLIENT)
    public void addInformation(ItemStack item, EntityPlayer player, List list, boolean par4)
    {
    	list.add("Uses Bullets");
    }
    
    
@Override   
@SideOnly(Side.CLIENT)

    public void registerIcons(IIconRegister iconRegister)
    {
	if (LightningMaterials.HDTextures==true){
		this.itemIcon = iconRegister.registerIcon(texturePath);
	}
if (LightningMaterials.HDTextures==false){
		this.itemIcon = iconRegister.registerIcon(texturePath + "2");
	}
    }   
     public ItemStack onItemRightClick(ItemStack par1ItemStack, World par2World, EntityPlayer par3EntityPlayer)
    
    {
    this.gunfired = true;
    float f =  1.0F;
            f = (f * f + f * 2.0F)/  3.0F;
        
      if(!par3EntityPlayer.capabilities.isCreativeMode && par3EntityPlayer.inventory.hasItem(LightningMaterials.Bullet))
      {
     
       

        par2World.playSoundAtEntity(par3EntityPlayer, "random.bow", 0.5F, 0.4F / (itemRand.nextFloat() * 0.4F + 0.8F));

        if (!par2World.isRemote && gunfired == false)
      
        
        
        {
         par3EntityPlayer.inventory.consumeInventoryItem(LightningMaterials.Bullet);
         par1ItemStack.damageItem(1, par3EntityPlayer);
            par2World.spawnEntityInWorld(new EntityArrow(par2World, par3EntityPlayer, f * 4.0F));
        }

        return par1ItemStack;

    }
      if(par3EntityPlayer.capabilities.isCreativeMode && this.gunfired == false)
      {
     
       

        par2World.playSoundAtEntity(par3EntityPlayer, "random.bow", 0.5F, 0.4F / (itemRand.nextFloat() * 0.4F + 0.8F));

        if (!par2World.isRemote)
      
        
        
        {
        	EntityArrow entityarrow = new EntityArrow(par2World, par3EntityPlayer, f * 4.0F);
        	entityarrow.canBePickedUp = 2;
            par2World.spawnEntityInWorld(entityarrow);
        }

        return par1ItemStack;

    }
		return par1ItemStack;}
     public void onPlayerStoppedUsing(ItemStack p_77615_1_, World p_77615_2_, EntityPlayer p_77615_3_, int p_77615_4_)
     {
    	 
    	 this.gunfired = false;
    	 
     }
}